# Base data presenter that defines the list of data fields that can be passed
# across the Courier API. This base presenter can be used in both PX and CX
# where a subclass takes cares of returning values for the fields, where
# appropriate.
module ClientApi
  class BaseDataPresenter    

    def map_data(fields)
      fields.reduce({}) do |data, field|
        data[field] = self.send(field)
        data
      end
    end

    # @note Courier's 'rake app:generate_document_models' task can generate this
    #       list for you based on the document templates!
    FIELD_LIST = [
      :address_line1,
      :address_line2,
      :agreed_amount_text,
      :aioi_account_number,
      :aioi_bank,
      :aioi_bsb,
      :aioi_company_name,
      :amount,
      :amount_text,
      :annual_premium,
      :assessed_amount,
      :assessed_amount_text,
      :attempted_date,
      :author_name_text,
      :author_no,
      :author_title_text,
      :balance_amount,
      :balance_amount_text,
      :cancel_notice_sent_date,
      :cancellation_date,
      :cheque_no,
      :claim_condition,
      :claim_handler,
      :claim_month,
      :claim_type,
      :claim_year,
      :claims_email,
      :claims_phone,
      :client_name,
      :client_surname,
      :client_title,
      :company_liability,
      :company_name_text,
      :cover_date,
      :cover_selection,
      :cover_type,
      :ctp_amount_text,
      :date_of_birth,
      :date_text,
      :dealer_name,
      :dealership_text,
      :decline_reason,
      :disclosures,
      :doctor_name_text,
      :document_date,
      :driver_name,
      :end_date,
      :end_date_text,
      :enter_current_usage,
      :excess,
      :expiry_date,
      :extra_cost_amount,
      :extra_excess_text,
      :extra_premium,
      :fax_no,
      :file_number,
      :finance_co,
      :financier_name,
      :free_text,
      :free_text_date,
      :from_name,
      :gap_amount_text,
      :given_names,
      :gst_amount_text,
      :hire_care_amount_text,
      :illness_date,
      :illness_date_text,
      :incept_date,
      :injury_date,
      :injury_date_text,
      :instalment_amount,
      :instalment_period,
      :instalment_start_date,
      :insurance_company,
      :insured_given_names,
      :insured_surname,
      :insured_title,
      :last_inst_amount,
      :last_inst_date,
      :letter_text,
      :loss_date,
      :loss_location,
      :ncb,
      :ncb_percentage,
      :next_inst_amount,
      :next_inst_date,
      :owed_amount_text,
      :paid_amount_text,
      :payment_amount,
      :payment_amount_text,
      :payment_due_date,
      :payment_process,
      :payment_protection_type,
      :phone,
      :policy_expired_days_before,
      :policy_expiry_date,
      :policy_number,
      :policy_type,
      :postcode,
      :pre_accident_value_text,
      :premium_increase_reason,
      :reason,
      :received_amount,
      :received_amount_twice_date,
      :received_date,
      :recovery_agent_name,
      :refund_amount,
      :refund_date,
      :rego_amount_text,
      :remaining_amount,
      :renewal_date,
      :repair_amount,
      :repairer_name,
      :repairer_name_text,
      :replacement_vehicle_text,
      :req_recd_date,
      :requested_info,
      :return_date_text,
      :return_premium,
      :salvage_amount_text,
      :salvage_company_phone_text,
      :salvage_company_text,
      :settlement_amount_text,
      :short_term_date,
      :short_termed_date,
      :solicitor_name,
      :start_date,
      :start_date_text,
      :start_year,
      :state,
      :stated_date_text,
      :statement_text,
      :street,
      :suburb,
      :surname,
      :third_party_rego,
      :title,
      :total_text,
      :towing_amount_text,
      :underwriting_criteria,
      :unemployment_date,
      :unemployment_date_text,
      :unit,
      :unpaid_prem_text,
      :vehicle_age,
      :vehicle_details,
      :vehicle_make,
      :vehicle_model,
      :vehicle_rego,
      :vehicle_year,
      :vin,
      :work_date,
    ]

    FIELD_LIST.each do |field|
      define_method(field) {}
    end
  end # class
end # module
